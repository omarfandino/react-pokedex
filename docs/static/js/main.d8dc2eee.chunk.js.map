{"version":3,"sources":["components/Search.js","components/PokemonItem.js","services/getPokemon.js","components/PokemonGrid.js","components/EvolutionGrid.js","Pokedex.js","index.js"],"names":["Search","setInputPokemon","history","useHistory","useState","inputSearch","setInputSearch","handleInputPokemon","e","preventDefault","trim","length","push","onSubmit","className","onChange","target","value","toLowerCase","list","placeholder","onClick","id","PokemonItem","statusFetch","name","sprites","weight","mostrarCadena","src","front_default","alt","to","getPokemon","pokemon","a","pokemonData","url","encodeURI","fetch","resp","status","json","urlSpecie","species","console","error","getEvolutionChain","urlEvolutionChain","evolution_chain","chain","getEvolutionArray","arrayEvolution","map","namePokemon","dataPokemon","evolves_to","nombrePokemon","arrayPokemon","PokemonGrid","pokemonInfo","setPokemonInfo","useEffect","then","EvolutionGrid","pokeEvol","useParams","pokemonEvolution","setPokemonEvolution","arrayPromise","pokemonPromise","pokemonResolve","pokemonEvolut","Pokedex","inputPokemon","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8dc2eee.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Search = ({ setInputPokemon }) => {\r\n\r\n    const history = useHistory();\r\n    // Iniciamos el campo Input\r\n    const [inputSearch, setInputSearch] = useState('');\r\n    \r\n    // Guardamos el valor que ingresa por el campo de busqueda\r\n    const handleInputValue = (e) => {\r\n        setInputSearch( e.target.value.toLowerCase() );\r\n    };\r\n    \r\n    // Guardamos el valor en la variable inputPokemon \r\n    const handleInputPokemon = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if( inputSearch.trim().length !== 0 ) {\r\n            setInputPokemon( inputSearch );\r\n            setInputSearch('');\r\n            history.push('/');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleInputPokemon } className=\"input-group mt-5 mb-5\">\r\n            <input onChange={ handleInputValue } value={ inputSearch }\r\n                className=\"form-control\" list=\"datalistOptions\"\r\n                placeholder=\"Busca un Pokémon...\" />\r\n            <button onClick={ handleInputPokemon } className=\"btn btn-outline-secondary\">Buscar</button>\r\n            <datalist id=\"datalistOptions\">\r\n                <option value=\"Pikachu\" />\r\n                <option value=\"Bulbasaur\" />\r\n                <option value=\"Charmander\" />\r\n                <option value=\"Squirtle\" />\r\n                <option value=\"Mew\" />\r\n            </datalist>\r\n        </form>\r\n    );\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const PokemonItem = ({ statusFetch, id, name, sprites, weight, mostrarCadena }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            {\r\n                statusFetch === 200 ?\r\n                (<div className=\"row g-0\">\r\n                    <div className=\"col-md-4\">\r\n                        <img src={ sprites.front_default } className=\"card-img-top\" alt={ name } />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{ name }</h5>\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                                <b>ID: </b> { id } <br />\r\n                                <b>Peso: </b> { weight }\r\n                            </h6>\r\n                            { \r\n                                mostrarCadena && <Link className=\"btn btn-outline-secondary\" to={`/evolucion/${ id }`}>Evoluciones</Link>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>) :\r\n                (<div className=\"row\">\r\n                    <div className=\"card-body p-5\">\r\n                        <h5 className=\"card-title\">Pokémon no encontrado</h5>\r\n                        <h6 className=\"card-subtitle mb-2 text-muted\">Por favor intente con otro ID o Nombre de Pokémon</h6>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","//Construccion de datos del Pokemon\r\nexport const getPokemon = async( pokemon ) => {\r\n    let pokemonData =  {};\r\n    \r\n    try {\r\n        const url = `https://pokeapi.co/api/v2/pokemon/${ encodeURI( pokemon ) }`;\r\n        const resp = await fetch( url );\r\n        const statusFetch = resp.status;\r\n        const { id, name, sprites, weight, species: { url: urlSpecie } } = await resp.json();\r\n\r\n        pokemonData =  {\r\n            statusFetch,\r\n            id,\r\n            name,\r\n            sprites,\r\n            weight,\r\n            urlSpecie\r\n        };\r\n    } catch( e ) {\r\n        console.error(e)\r\n    }\r\n    \r\n    return pokemonData;\r\n}\r\n\r\n//Obtener la \"cadena de evolucion\"\r\nexport const getEvolutionChain = async( urlSpecie ) => {\r\n    let resp = await fetch( urlSpecie );\r\n    const { evolution_chain: { url: urlEvolutionChain } } = await resp.json();\r\n\r\n    resp = await fetch( urlEvolutionChain );\r\n    const { chain } = await resp.json();\r\n\r\n    //Metodo recursivo para obtener la cadena de evolucion\r\n    let arrayEvolution = await getEvolutionArray( chain );\r\n    \r\n    arrayEvolution = await arrayEvolution.map( async( namePokemon ) => {\r\n        const dataPokemon = await getPokemon( namePokemon );\r\n        return dataPokemon;\r\n    })\r\n\r\n    return arrayEvolution;\r\n}\r\n\r\nexport const getEvolutionArray = ( chain ) => {\r\n    if ( chain.evolves_to.length === 0 ) {\r\n        return [chain.species.name];\r\n    } else {\r\n        const nombrePokemon = chain.species.name;\r\n        const arrayPokemon = getEvolutionArray( chain.evolves_to[0] );\r\n\r\n        return [ nombrePokemon, ...arrayPokemon ];\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { PokemonItem } from './PokemonItem'\r\nimport { getPokemon } from '../services/getPokemon';\r\n\r\nexport const PokemonGrid = ({ pokemon }) => {\r\n    \r\n    const [pokemonInfo, setPokemonInfo] = useState('');\r\n\r\n    //Renderizar despues de montar el componente\r\n    useEffect(() => {\r\n        getPokemon( pokemon ).then( setPokemonInfo );\r\n    }, [pokemon]);\r\n\r\n    return (\r\n        <div className=\"card-group\">\r\n            {\r\n                pokemonInfo && <PokemonItem { ...pokemonInfo } mostrarCadena={ true } />\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { getEvolutionChain, getPokemon } from '../services/getPokemon';\r\nimport { PokemonItem } from './PokemonItem';\r\n\r\nexport const EvolutionGrid = () => {\r\n\r\n    const { id: pokeEvol } = useParams();\r\n\r\n    const [pokemonEvolution, setPokemonEvolution] = useState([]);\r\n\r\n    //Renderizar despues de montar el componente\r\n    useEffect(() => {\r\n        setPokemonEvolution([])\r\n        getPokemon( pokeEvol ).then( pokemonData => {\r\n            getEvolutionChain( pokemonData.urlSpecie )\r\n            .then( arrayPromise => {\r\n                arrayPromise.map( pokemonPromise => { \r\n                    pokemonPromise.then( pokemonResolve => {\r\n                        setPokemonEvolution( pokemonEvolut => [...pokemonEvolut, pokemonResolve] )\r\n                    })\r\n                })\r\n            })\r\n        });\r\n    }, [pokeEvol]);\r\n\r\n    return (\r\n        <div className=\"card-group\">\r\n            {\r\n                pokemonEvolution.length !== 0 && pokemonEvolution.map( pokemonData => {\r\n                    return (\r\n                        <PokemonItem\r\n                            key={ pokemonData.id }\r\n                            { ...pokemonData }\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\n/* Comonents */\r\nimport { Search } from './components/Search'\r\nimport { PokemonGrid } from './components/PokemonGrid'\r\nimport { EvolutionGrid } from './components/EvolutionGrid';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nexport const Pokedex = () => {\r\n\r\n    // Iniciamos nuestro campo en vacio\r\n    const [inputPokemon, setInputPokemon] = useState(4);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Router>\r\n                <Search setInputPokemon={ setInputPokemon } />\r\n                <Switch>\r\n                    <Route path=\"/evolucion/:id\">\r\n                        <EvolutionGrid />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <PokemonGrid pokemon={ inputPokemon } />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Pokedex } from './Pokedex';\n\nimport './index.css';\n\nReactDOM.render(\n  <Pokedex />,\n  document.getElementById('root')\n);"],"sourceRoot":""}